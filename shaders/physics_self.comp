#version 450 core

#include <physics.comp>

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

void main() {
    uint self = gl_WorkGroupID.x;

    objects[self].state &= ~HIT;

//    if(isnan(length(objects[self].position)) || isnan(length(objects[self].velocity)) || isnan(length(objects[self].acceleration)) || isnan(length(objects[self].angle))) {
//        objects[self].state &= ~CLIP;
//        objects[self].state |= ERROR;
//    }

    if ((objects[self].state & MOVE) != 0) {

        float Air_Density = 1;

        vec3 v = objects[self].velocity.xyz;

        float c = QUARTER_PI * Air_Density * pow(objects[self].radius, 2);

        objects[self].acceleration.xyz -= c * v * abs(v);

        objects[self].velocity.xyz += objects[self].acceleration.xyz * time_delta * 0.5;
        objects[self].position.xyz += objects[self].velocity.xyz * time_delta;
        objects[self].velocity.xyz += objects[self].acceleration.xyz * time_delta * 0.5;

        objects[self].angle_velocity.xyz += objects[self].angle_acceleration.xyz * time_delta * 0.5;
        objects[self].angle.xyz += objects[self].angle_velocity.xyz * time_delta;
        objects[self].angle_velocity.xyz += objects[self].angle_acceleration.xyz * time_delta * 0.5;
    }

    objects[self].acceleration.xyz = vec3(0);
}
